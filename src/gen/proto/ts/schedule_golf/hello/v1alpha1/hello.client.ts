// @generated by protobuf-ts 2.2.2 with parameter long_type_number
// @generated from protobuf file "schedule_golf/hello/v1alpha1/hello.proto" (package "schedule_golf.hello.v1alpha1", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";

import type { SayHelloResponse } from "./hello";
import type { SayHelloRequest } from "./hello";
import { GreeterService } from "./hello";
/**
 * The greeter service definition.
 *
 * @generated from protobuf service schedule_golf.hello.v1alpha1.GreeterService
 */
export interface IGreeterServiceClient {
    /**
     * Sends a greeting
     *
     * @generated from protobuf rpc: SayHello(schedule_golf.hello.v1alpha1.SayHelloRequest) returns (schedule_golf.hello.v1alpha1.SayHelloResponse);
     */
    sayHello(input: SayHelloRequest, options?: RpcOptions): UnaryCall<SayHelloRequest, SayHelloResponse>;
}
/**
 * The greeter service definition.
 *
 * @generated from protobuf service schedule_golf.hello.v1alpha1.GreeterService
 */
export class GreeterServiceClient implements IGreeterServiceClient, ServiceInfo {
    typeName = GreeterService.typeName;
    methods = GreeterService.methods;
    options = GreeterService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * Sends a greeting
     *
     * @generated from protobuf rpc: SayHello(schedule_golf.hello.v1alpha1.SayHelloRequest) returns (schedule_golf.hello.v1alpha1.SayHelloResponse);
     */
    sayHello(input: SayHelloRequest, options?: RpcOptions): UnaryCall<SayHelloRequest, SayHelloResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<SayHelloRequest, SayHelloResponse>("unary", this._transport, method, opt, input);
    }
}
